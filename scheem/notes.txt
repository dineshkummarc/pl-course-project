start =
	wordlist

wordlist = 
	first:word " " rest:wordlist* { return [ first ].concat( rest[ 0 ] ); }
	/ word:word { return [ word ]; }

word = first:[a-z] rest:word* { return first + rest.join(""); }








start = expression

expression = "(" list:list ")" { return list; }
/ atom

list = first:expression " " rest:list* { return [ first ].concat( rest[ 0 ] ); }
/ expression:expression {return [ expression ]; }

validchar
    = [0-9a-zA-Z_?!+\-=@#$%^&*/.]

atom =
    chars:validchar+
        { return chars.join(""); }








start =
    comma

comma =
	left:additive "," right:comma
    	{ return {tag: ",", left:left, right:right}; }
	/ additive

additive =
    left:multiplicative "+" right:additive
        { return {tag: "+", left:left, right:right}; }
  / multiplicative

multiplicative =
    left:primary "*" right:multiplicative
        { return {tag: "*", left:left, right:right}; }
  / primary

primary =
    integer
  / "(" additive:additive ")"
      { return additive; }

integer =
    digits:[0-9]+
        { return parseInt(digits.join(""), 10); }